Variable Types:
1. Number 
  NaN: not a number
2. String
  10 + "34" -> "1034"
  10 - "3" -> 7
3. Boolean
  3 === 3 -> true (same type and value)
4. Undefined
  Variable has not been assigned 
5. Null
  Nothing in the object
6. Symbol (new in ECMAScript 6)
7. Object

var storedVal = prompt("Prompt phrase: "); -> will store as a string
Cast a string to number: Number(storedVal)

let varName (let: new in ECMAScript 6)

Anonymous function:
var hello = function() {
  console.log("Hi");
}

More info in: w3c array methods
  ary.shift(): remove front
  ary.pop(): remove back
  ary.push(): append 
  ary.concat([1, 2, 3]);
  ary.sort();
  ary.length
  
Object: collection of properties {} -> like a struct
  access to a property: obj.property;
  add a new property: obj.addProperty = "newProperty";
  function inside an object: method
  var obj = {
    methodA: function() {
    }
  };
  obj.methodA()

A list of objects
  [{},{},...]
  listObj[index].property

forEach usage:
ary.forEach(function(value) {
  console.log(value);
}
===================================
ary.forEach(function(value, index) {
  console.log(value, index);
}
===================================
function functionName(value, index) {
  console.log(value, index);
}

ary.forEach(functionName);

DOM: Document Object Model (document)
- what browser creates to allow us to modify HTML and CSS
- document is just an object (its parent object is window)
- window.alert("hello")
- document.write("hello") (window.write("hello") would not work)

JavaScript engine

DOM selectors:
1. getElementsByTagName
   document.getElementsByTagName("")
2. getElementsById -> only one 
3. getElementsByClassName -> returns an array -> use [index] after

===================================
RECOMMENDED
4. document.querySelector(" ") -> select first item
   document.querySelectorAll(" ") -> select all items
===================================
5. document.querySelector("li").getAttribute("name")
6. document.querySelector("li").setAttribute("name", "value")

Change styles:
   document.querySelector("h1").style.property = ""; 
   Alternatively:
      1. className
        var h1 = document.querySelector("h1");
        h1.className = "assignedClassName";
      2. classList
        document.querySelector("li").classList;
        method contains: add/remove/toggle (on, off)

innerHTML (kinda dangerous)
  document.querySelector("h1").innerHTML = "<h1>hi</h1>";

parentElement
children

It is important to cache selectors in variables!!! -> store in a variable!

Add <script type="text/javascript" src="script.js"></script> at the end of body

// getElementsByTagName returns an array of elements
var button = document.getElementsByTagName("button")[0];
button.addEventListener("click", function() {
  console.log("click!");
}
event listener: mouseenter, mouseleave...etc

Create an element:
  var li = document.createElement("li");

Create a text node:
  li.appendChild(document.createTextNode(input.value);

Attach:
  ul.appendChild(li);

JavaScript Char Codes (key codes): https://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes
Event Reference: https://developer.mozilla.org/en-US/docs/Web/Events

Callback function:
  input.addEventListener("keypress", addListAfterKeyPress)
  addListAfterKeyPress is a callback function. When the key is pressed, the function automatically gets called. 
  
  
Ternary operator:
  eval ? option1 : option 2;
  
  Equivalent to:
  if (eval)
  {
    return option1;
  }
  else
  {
    return option2;
  }
  
  
  
